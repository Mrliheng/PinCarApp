//
//  RegisterViewController.m
//  品车App
//
//  Created by zt on 2016/10/24.
//  Copyright © 2016年 fei. All rights reserved.
//

#import "RegisterViewController.h"
#import "ConfigureSetting.h"
#import "TabBarViewController.h"
#import "AppDelegate.h"
#import "qrCodeViewController.h"

#define textBGColor [UIColor colorWithRed:246/255.0 green:244/255.0 blue:242/255.0 alpha:0.1]  //文本框背景
#define btnHeight 50
#define textSpace btnHeight/2        //文本框的文字距文本框左边的距离
#define num 7
#define placeHolderColor [UIColor colorWithRed:240/255.0 green:216/255.0 blue:223/255.0 alpha:1] //placeholder颜色

@interface RegisterViewController ()<UITextFieldDelegate,UIAlertViewDelegate>
{
    UIView *_btnView;
    
    CGFloat _xSpace;
    UITextField *_userText;    //用户名
    UITextField *_pwdText;     //密码
    UITextField *_dupPwdText;  //重复密码
    UITextField *_telText;     //手机号
    UITextField *_verifyText;  //验证码
    UITextField *_inviteText;  //邀请码
    UIButton *_registBtn;      //注册
    UILabel *_msgLabel;        //提示label
    


}
@end

@implementation RegisterViewController

-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [self createItem];

}
- (void)viewDidLoad {
    [super viewDidLoad];
    
    [ConfigureSetting setViewControllerTitleWithTextColor:@"注册" color:[UIColor whiteColor] targetCtrl:self];
    self.navigationController.navigationBar.barStyle = UIBarStyleBlack;
    
    [self.view setbackgroundImage:[UIImage imageNamed:@"background.jpg"]];
    
    _xSpace = (SCREEN_HEIGHT - 64 - num * btnHeight)/(num + 3);
    _userText = [self createTextFieldWithPlaceHolder:@"输入用户名"];
    
    _pwdText = [self createTextFieldWithPlaceHolder:@"输入密码（至少6位数）"];
    [_pwdText setSecureTextEntry:YES];

    _dupPwdText = [self createTextFieldWithPlaceHolder:@"重复输入密码"];
    [_dupPwdText setSecureTextEntry:YES];

    _telText = [self createTextFieldWithPlaceHolder:@"输入手机号(非必填项)"];
    _telText.keyboardType = UIKeyboardTypeNumberPad;
    _telText.delegate = self;
    
    
    _inviteText = [self createTextFieldWithPlaceHolder:@"邀请码(非必填项)"];
    _inviteText.keyboardType = UIKeyboardTypeNumberPad;
    UIButton *obtainInvite = [UIButton new];
    [obtainInvite addTarget:self action:@selector(scanQRCode) forControlEvents:UIControlEventTouchUpInside];
    [_inviteText addSubview:obtainInvite];
    obtainInvite.sd_layout
    .rightSpaceToView(_inviteText,8)
    .topSpaceToView(_inviteText,0)
    .bottomSpaceToView(_inviteText,0)
    .widthIs(btnHeight);
    [obtainInvite setLeftLine];
    
    UIImageView *bgView = [[UIImageView alloc]initWithImage:[UIImage imageNamed:@"reg_qrcode"]];
    [obtainInvite addSubview:bgView];
    bgView.sd_layout
    .centerXEqualToView(obtainInvite)
    .centerYEqualToView(obtainInvite);
    
    UIButton *registBtn = [UIButton new];
    [registBtn setTitle:@"注册" forState:UIControlStateNormal];
    [registBtn setTitleColor:placeHolderColor forState:UIControlStateNormal];
    registBtn.layer.masksToBounds = YES;
    registBtn.layer.cornerRadius = btnHeight/2;
    registBtn.layer.borderColor = placeHolderColor.CGColor;
    registBtn.layer.borderWidth = 0.5;
    [registBtn addTarget:self action:@selector(registerUser:) forControlEvents:UIControlEventTouchUpInside];
    _registBtn = registBtn;
    
    NSMutableArray *arr = [NSMutableArray arrayWithObjects:_userText,_pwdText,_dupPwdText,_telText,_inviteText,_registBtn, nil];
    [self setAutolayoutWithViews:arr];
    
    [self createMsgLabel];
    
}
-(void)scanQRCode{
    
    qrCodeViewController *qrCode = [[qrCodeViewController alloc]init];
    __weak typeof(UITextField *)weakInvite = _inviteText;
    qrCode.block = ^(NSString *code){
      
        weakInvite.text = code;
    };
    [self.navigationController pushViewController:qrCode animated:YES];

}
-(void)createMsgLabel{
    
    _msgLabel = [UILabel new];
    _msgLabel.backgroundColor = [UIColor clearColor];
    _msgLabel.textColor = [UIColor whiteColor];
    _msgLabel.font = [UIFont systemFontOfSize:12];
    _msgLabel.textAlignment = NSTextAlignmentCenter;
    [self.view addSubview:_msgLabel];
    
    _msgLabel.sd_layout
    .bottomEqualToView(self.view)
    .leftEqualToView(self.view)
    .rightEqualToView(self.view)
    .heightIs(30);
    
}
-(void)setAutolayoutWithViews:(NSArray *)arr{
    
    CGFloat xSpace = 50;
    if (SCREEN_WIDTH<330) {
        xSpace = SCREEN_WIDTH/15;
    }
    
    for (UIView *view in arr) {
        [self.view addSubview:view];
    }
    for(int i=0;i<arr.count;i++){
        CGFloat topHeight;
        UIView *topView;
        if (i==0) {
            topView = self.view;
            topHeight = _xSpace*2;
        }
        else{
            topView = arr[i-1];
            topHeight = _xSpace;
        }
        UIView *view = arr[i];
        
        view.sd_layout
        .leftSpaceToView(self.view,xSpace)
        .rightSpaceToView(self.view,xSpace)
        .topSpaceToView(topView,topHeight)
        .heightIs(btnHeight);
        [view updateLayout];
    }
}
-(BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    if (textField.text.length == 1) {
        [self createVerify];
        
        [self.view sd_clearAutoLayoutSettings];
        NSMutableArray *arr = [NSMutableArray arrayWithObjects:_userText,_pwdText,_dupPwdText,_telText,_verifyText,_inviteText,_registBtn, nil];
        [self setAutolayoutWithViews:arr];
    }
    return YES;
}

-(void)createVerify{
    
    if (_verifyText) {
        return;
    }
    _verifyText = [self createTextFieldWithPlaceHolder:@"验证码"];
    _verifyText.keyboardType = UIKeyboardTypeNumberPad;
    UIButton *obtainVerify = [UIButton new];
    //    obtainVerify.backgroundColor = [UIColor lightGrayColor];
    [obtainVerify setTitle:@"获取验证码" forState:UIControlStateNormal];
    [obtainVerify addTarget:self action:@selector(getButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    [_verifyText addSubview:obtainVerify];
    
    obtainVerify.sd_layout
    .rightSpaceToView(_verifyText,0)
    .topSpaceToView(_verifyText,0)
    .bottomSpaceToView(_verifyText,0)
    .widthRatioToView(_verifyText,0.5);
    
    [obtainVerify setLeftLine];
    
}
-(void)createItem{
    
    NSString *navcBack = @"navigationBarBG";
    if (SCREEN_WIDTH>375) {
        navcBack = @"navigationBarBGPlus";
    }
    [self.navigationController.navigationBar setBackgroundImage:[UIImage imageNamed:navcBack] forBarMetrics:UIBarMetricsDefault];
    
    UIButton *backBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [backBtn setBackgroundImage:[UIImage imageNamed:@"back"] forState:UIControlStateNormal];
    [backBtn setBackgroundImage:[UIImage imageNamed:@"back"] forState:UIControlStateHighlighted];
    backBtn.frame = CGRectMake(0, 0, 15, 10);
    [backBtn addTarget:self action:@selector(back) forControlEvents:UIControlEventTouchUpInside];
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc]initWithCustomView:backBtn];
    
}
-(void)back{
    [self.navigationController popViewControllerAnimated:YES];
}

-(void)registerUser:(UIButton *)btn{
    if(![_pwdText.text isEqualToString:_dupPwdText.text]){
       _msgLabel.text = @"两次密码输入不一致";
//        UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"" message:@"两次密码输入不一致" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles: nil];
//        [alertView show];
        return;
    }
    btn.enabled = NO;
   
    NSDictionary *paramDic = @{@"username":_userText.text,@"password":_pwdText.text};
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
//    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObject:@"text/html"];
    NSString *url = [NSString stringFollowBaseUrl:registURL];
    [manager GET:url parameters:paramDic progress:^(NSProgress * _Nonnull uploadProgress) {
        
        
    } success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *rootDic = responseObject;
        
        if ([rootDic[@"code"] integerValue] == 0) {
            [[NSUserDefaults standardUserDefaults]setValue:_userText.text forKey:USER_NAME];
            [[NSUserDefaults standardUserDefaults]synchronize];
            //注册成功。
//            _msgLabel.text = rootDic[@"msg"];
            TabBarViewController *tabBar = [[TabBarViewController alloc]init];
            UIView *bgView = [[UIView alloc]initWithFrame:tabBar.tabBar.bounds];
            bgView.backgroundColor = [UIColor whiteColor];
            [tabBar.tabBar insertSubview:bgView atIndex:0];
            tabBar.tabBar.opaque = YES;
            
            //tabbar未选中时字体颜色及大小
            [[UITabBarItem appearance] setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:[UIColor colorWithRed:96.0/255.0 green:40.0/255.0 blue:132.0/255.0 alpha:1.0],NSForegroundColorAttributeName,[UIFont systemFontOfSize:12.0],NSFontAttributeName, nil] forState:UIControlStateNormal];
            //tabbar选中时字体颜色及大小
            [[UITabBarItem appearance] setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:[UIColor redColor],NSForegroundColorAttributeName,[UIFont systemFontOfSize:12.0],NSFontAttributeName, nil] forState:UIControlStateSelected];
            
            AppDelegate *app = (AppDelegate *)[UIApplication sharedApplication].delegate;
            
            app.window.rootViewController = tabBar;

//            UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"" message:rootDic[@"msg"] delegate:self cancelButtonTitle:@"确定" otherButtonTitles: nil];
//            [alertView show];
        }
        else{
            _msgLabel.text = rootDic[@"msg"];

//            UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"" message:rootDic[@"msg"] delegate:nil cancelButtonTitle:@"确定" otherButtonTitles: nil];
//            [alertView show];
        }
        
        btn.enabled = YES;
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
    
        _msgLabel.text = @"连接失败，请稍后重试";
//        UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"" message:@"连接失败，请稍后重试" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles: nil];
//        [alertView show];
    }];
}

-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    TabBarViewController *tabBar = [[TabBarViewController alloc]init];
    UIView *bgView = [[UIView alloc]initWithFrame:tabBar.tabBar.bounds];
    bgView.backgroundColor = [UIColor whiteColor];
    [tabBar.tabBar insertSubview:bgView atIndex:0];
    tabBar.tabBar.opaque = YES;
    
    //tabbar未选中时字体颜色及大小
    [[UITabBarItem appearance] setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:[UIColor colorWithRed:96.0/255.0 green:40.0/255.0 blue:132.0/255.0 alpha:1.0],NSForegroundColorAttributeName,[UIFont systemFontOfSize:12.0],NSFontAttributeName, nil] forState:UIControlStateNormal];
    //tabbar选中时字体颜色及大小
    [[UITabBarItem appearance] setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:[UIColor redColor],NSForegroundColorAttributeName,[UIFont systemFontOfSize:12.0],NSFontAttributeName, nil] forState:UIControlStateSelected];
    
    AppDelegate *app = (AppDelegate *)[UIApplication sharedApplication].delegate;

    app.window.rootViewController = tabBar;
}
-(UITextField *)createTextFieldWithPlaceHolder:(NSString *)placeHolder{
    
    UITextField *textField = [UITextField new];
    
    textField.placeholder = placeHolder;
    [textField setValue:placeHolderColor forKeyPath:@"_placeholderLabel.textColor"];
    textField.textColor = [UIColor whiteColor];
    textField.layer.masksToBounds = YES;
    textField.layer.cornerRadius = btnHeight/2;

    textField.leftView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, textSpace, 0)];
    textField.leftViewMode = UITextFieldViewModeAlways;
    textField.backgroundColor = textBGColor;

    return textField;
    
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - 获取验证码
- (void)getButtonClick:(UIButton *)sender
{
    //发送短信接口
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObject:@"text/html"];
    [manager.requestSerializer setValue:[[NSUserDefaults standardUserDefaults]objectForKey:COOKIE] forHTTPHeaderField:@"cookie"];
    NSDictionary *param = @{@"mobile":_telText.text};
    [manager POST:[NSString stringFollowBaseUrl:phonetestURL] parameters:param progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
    }];
    
    //正常状态下的背景颜色
    UIColor *mainColor = [UIColor clearColor];
    //倒计时状态下的颜色
    UIColor *countColor = [UIColor clearColor];
    [self setTheCountdownButton:sender startWithTime:59 title:@"重新获取" countDownTitle:@"s后重新发送"mainColor:mainColor countColor:countColor];
    
}

#pragma mark - button倒计时
- (void)setTheCountdownButton:(UIButton *)button startWithTime:(NSInteger)timeLine title:(NSString *)title countDownTitle:(NSString *)subTitle mainColor:(UIColor *)mColor countColor:(UIColor *)color {
    //倒计时时间
    __block NSInteger timeOut = timeLine;
    dispatch_queue_t queue =dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT,0);
    dispatch_source_t _timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER,0, 0, queue);
    //每秒执行一次
    dispatch_source_set_timer(_timer,dispatch_walltime(NULL,0), 1.0 * NSEC_PER_SEC,0);
    dispatch_source_set_event_handler(_timer, ^{
        
        //倒计时结束，关闭
        if (timeOut == 0) {
            dispatch_source_cancel(_timer);
            dispatch_async(dispatch_get_main_queue(), ^{
                button.backgroundColor = mColor;
                [button setTitle:title forState:UIControlStateNormal];
                button.userInteractionEnabled =YES;
            });
        } else {
            int seconds = timeOut % 60;
            NSString *timeStr = [NSString stringWithFormat:@"%0.1d", seconds];
            dispatch_async(dispatch_get_main_queue(), ^{
                button.backgroundColor = color;
                [button setTitle:[NSString stringWithFormat:@"%@%@",timeStr,subTitle]forState:UIControlStateNormal];
                button.titleLabel.font = [UIFont systemFontOfSize:17.0];
                button.userInteractionEnabled =NO;
            });
            timeOut--;
        }
    });
    dispatch_resume(_timer);
}

@end
